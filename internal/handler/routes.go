// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"user/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/userJwt",
				Handler: GetUserJWTHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/userAvatar",
				Handler: GetUserAvatarHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user",
				Handler: GetUserHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/userSignOut",
				Handler: GetUserSignOutHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/userAccountOccupied",
				Handler: GetUserAccountOccupiedHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/userSignUp",
				Handler: PostUserSignUpHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/userLogin",
				Handler: PostUserLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/userResetPassword",
				Handler: PostUserPasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/userSentSMS",
				Handler: PostUserSentSMSHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/userProfile",
				Handler: getUserProfileHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/userProfile",
				Handler: PutUserProfileHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/userAvatar",
				Handler: putUserAvatarHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
